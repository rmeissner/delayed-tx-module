{
  "address": "0x82E62cF60eB5276b8DF10A64A09Af83BE3B362CE",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        }
      ],
      "name": "NewAnnouncement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "delay",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        }
      ],
      "name": "UpdatedConfig",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELAYED_TRANSACTION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "announceTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "announcements",
      "outputs": [
        {
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "execTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "execTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        }
      ],
      "name": "approveTransactionAnnouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "configs",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "delay",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "getTransactionHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "revokeTransactionAnnouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "delay",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        }
      ],
      "name": "updateConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1bf4b57e199472bc9691075fb22c9d2a757f4ce90725aad1ff53ec0093c428b9",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x05c85Ab5B09Eb8A55020d72daf6091E04e264af9",
    "contractAddress": null,
    "transactionIndex": 3,
    "gasUsed": "1683069",
    "logsBloom": "0x
    "blockHash": "0x978da95c30be7c6c3e7074586869ac8f53f1a37cc54dd32a7934f5dbdf505654",
    "transactionHash": "0x1bf4b57e199472bc9691075fb22c9d2a757f4ce90725aad1ff53ec0093c428b9",
    "logs": [],
    "blockNumber": 7952208,
    "cumulativeGasUsed": "2219317",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d6b91460ca7beafceb87b52cc97c41f2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"NewAnnouncement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"delay\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"}],\"name\":\"UpdatedConfig\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELAYED_TRANSACTION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"announceTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"announcements\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"execTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"execTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"}],\"name\":\"approveTransactionAnnouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"configs\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"delay\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"getTransactionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"revokeTransactionAnnouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"delay\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeTransaction(address,address,uint256,bytes,uint8,uint256)\":{\"details\":\"This method can be triggered by anyone, as transaction announcement is authorized.\",\"params\":{\"data\":\"Data payload of delayed transaction.\",\"executor\":\"Contract that will execute the delayed transaction.\",\"nonce\":\"None of delayed transaction.\",\"operation\":\"Operation type of delayed transaction.\",\"to\":\"Destination address of delayed transaction.\",\"value\":\"Ether value of delayed transaction.\"}},\"getChainId()\":{\"details\":\"Returns the chain id used by this contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeTransaction(address,address,uint256,bytes,uint8,uint256)\":{\"notice\":\"Allows to trigger execution of a delayed transaction that has been announced before.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DelayedTxModule.sol\":\"DelayedTxModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DelayedTxModule.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\ncontract Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\\ninterface Executor {\\n    /// @dev Allows a Module to execute a transaction.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(address to, uint256 value, bytes calldata data, Enum.Operation operation)\\n        external\\n        returns (bool success);\\n}\\n\\ncontract DelayedTxModule {\\n\\n    event NewAnnouncement(address indexed executor, address indexed announcer, bytes32 txHash);\\n    event UpdatedConfig(address indexed executor, address indexed announcer, uint64 delay, bool requireAnnouncer);\\n    \\n    string public constant NAME = \\\"Delayed Transaction Module\\\";\\n    string public constant VERSION = \\\"1.0.0\\\";\\n\\n    bytes32 public constant DOMAIN_SEPARATOR_TYPEHASH = 0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218;\\n    // keccak256(\\n    //     \\\"EIP712Domain(uint256 chainId,address verifyingContract)\\\"\\n    // );\\n\\n    bytes32 public constant DELAYED_TRANSACTION_TYPEHASH = keccak256(\\n         \\\"DelayedTransaction(address executor,address to,uint256 value,bytes data,uint8 operation,uint256 nonce)\\\"\\n    );\\n\\n    struct Config {\\n        uint64 delay; // Delay in seconds before an announced transaction can be executed\\n        bool requireAnnouncer; // Flag to set if announcer should be checked again before execution\\n    }\\n    \\n    struct Announcement {\\n        address announcer; \\n        uint64 execTime; // Block time in seconds when the announced transaction can be executed\\n        bool requireAnnouncer; // Flag if to check if announcer is still present on execution\\n        bool executed; // Flag if the announced transaction was executed\\n    }\\n    \\n    // Executor -> Announcer -> Config\\n    mapping (address => mapping (address => Config)) public configs;\\n    \\n    // Transaction Hash -> Announcement\\n    mapping (bytes32 => Announcement) public announcements;\\n    \\n    function updateConfig(address announcer, uint64 delay, bool requireAnnouncer)\\n        public\\n    {\\n        // Note: msg.sender is the executor\\n        configs[msg.sender][announcer] = Config(delay, requireAnnouncer);\\n        emit UpdatedConfig(msg.sender, announcer, delay, requireAnnouncer);\\n    }\\n    \\n    function announceTransaction(address executor, address to, uint256 value, bytes memory data, Enum.Operation operation, uint256 nonce) \\n        public \\n    {\\n        // Note: msg.sender is the announcer\\n        Config memory config = configs[executor][msg.sender];\\n        require(config.delay > 0, \\\"Could not find valid config for executor and announcer\\\");\\n        // No need to check overflow because Solidity does this now (starting with 0.8.0)\\n        uint64 execTime = uint64(block.timestamp) + config.delay;\\n        bytes memory approveAnnouncement = abi.encodeWithSignature(\\n            \\\"approveTransactionAnnouncement(address,uint256,bytes,uint8,uint256,address,uint64,bool)\\\", \\n            to, \\n            value,\\n            data,\\n            operation,\\n            nonce,\\n            msg.sender,\\n            execTime,\\n            config.requireAnnouncer\\n        );\\n        // We redirect the announcement via the executor\\n        // This is a preemptive check that this modules is enabled and this also notifies the executor that a transaction was announced\\n        require(Executor(executor).execTransactionFromModule(address(this), 0, approveAnnouncement, Enum.Operation.Call), \\\"Could not announce transaction\\\");\\n    }\\n    \\n    function approveTransactionAnnouncement(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 nonce,\\n        address announcer,\\n        uint64 execTime,\\n        bool requireAnnouncer\\n    ) \\n        public \\n    {\\n        // Note: msg.sender is the executor\\n        bytes32 txHash = getTransactionHash(msg.sender, to, value, data, operation, nonce);\\n        Announcement memory announcement = announcements[txHash];\\n        require(!announcement.executed && announcement.execTime == 0, \\\"Cannot announce same transaction again\\\");\\n        announcements[txHash] = Announcement(announcer, execTime, requireAnnouncer, false);\\n        emit NewAnnouncement(msg.sender, announcer, txHash);\\n    }\\n    \\n    function revokeTransactionAnnouncement(address to, uint256 value, bytes memory data, Enum.Operation operation, uint256 nonce) \\n        public \\n    {\\n        // Note: msg.sender is the executor\\n        bytes32 txHash = getTransactionHash(msg.sender, to, value, data, operation, nonce);\\n        delete announcements[txHash];\\n    }\\n    \\n    /// @notice Allows to trigger execution of a delayed transaction that has been announced before.\\n    /// @dev This method can be triggered by anyone, as transaction announcement is authorized.\\n    /// @param executor Contract that will execute the delayed transaction.\\n    /// @param to Destination address of delayed transaction.\\n    /// @param value Ether value of delayed transaction.\\n    /// @param data Data payload of delayed transaction.\\n    /// @param operation Operation type of delayed transaction.\\n    /// @param nonce None of delayed transaction.\\n    function executeTransaction(address executor, address to, uint256 value, bytes memory data, Enum.Operation operation, uint256 nonce) \\n        public \\n    {\\n        bytes32 txHash = getTransactionHash(executor, to, value, data, operation, nonce);\\n        Announcement memory announcement = announcements[txHash];\\n        require(announcement.execTime <= block.timestamp, \\\"Cannot execute transaction yet\\\");\\n        // If the announcer is set we should check if the announcer is still enabled\\n        require(\\n            !announcement.requireAnnouncer || configs[executor][announcement.announcer].delay > 0, \\n            \\\"Could not find valid config for executor and announcer\\\"\\n        );\\n        announcement.executed = true;\\n        announcements[txHash] = announcement;\\n        // We do not require a success here, so that the hash will always be marked as executed\\n        Executor(executor).execTransactionFromModule(to, value, data, operation);\\n    }\\n    \\n    /// @dev Returns the chain id used by this contract.\\n    function getChainId() public view returns (uint256) {\\n        uint256 id;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            id := chainid()\\n        }\\n        return id;\\n    }\\n    \\n    /// @dev Generates the data for the delayed transaction hash (required for signing)\\n    function generateTransactionHashData(\\n        address executor,\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 nonce\\n    ) \\n        private \\n        view \\n        returns (bytes memory) \\n    {\\n        uint256 chainId = getChainId();\\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, chainId, this));\\n        bytes32 transactionHash = keccak256(\\n            abi.encode(DELAYED_TRANSACTION_TYPEHASH, executor, to, value, keccak256(data), operation, nonce)\\n        );\\n        return abi.encodePacked(bytes1(0x19), bytes1(0x01), domainSeparator, transactionHash);\\n    }\\n    \\n    function getTransactionHash(address executor, address to, uint256 value, bytes memory data, Enum.Operation operation, uint256 nonce) \\n        public\\n        view\\n        returns (bytes32)\\n    {\\n        return keccak256(generateTransactionHashData(executor, to, value, data, operation, nonce));\\n    }\\n}\",\"keccak256\":\"0xc0f0a12538454620120a9e260a1b58d46fdeafb0e3e1715a2c18f2e65ad327dc\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611d86806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638030c3a31161008c578063be1c179611610066578063be1c179614610204578063c2894cbe14610220578063c959c16e1461023c578063ffa1ad741461026c576100cf565b80638030c3a3146101ac578063a3f4df7e146101ca578063ad7b49fb146101e8576100cf565b80631bec1a92146100d45780631db61b54146101055780633408e4701461012357806368d733101461014157806376768d681461015d5780637d40d6c214610179575b600080fd5b6100ee60048036038101906100e9919061116f565b61028a565b6040516100fc9291906119d8565b60405180910390f35b61010d6102dc565b60405161011a919061185a565b60405180910390f35b61012b610303565b60405161013891906119bd565b60405180910390f35b61015b600480360381019061015691906111ab565b610310565b005b610177600480360381019061017291906111ab565b6105cd565b005b610193600480360381019061018e919061141d565b61097a565b6040516101a39493929190611815565b60405180910390f35b6101b46109f8565b6040516101c1919061185a565b60405180910390f35b6101d2610a1c565b6040516101df919061191b565b60405180910390f35b61020260048036038101906101fd91906112db565b610a55565b005b61021e600480360381019061021991906113a5565b610d29565b005b61023a6004803603810190610235919061124c565b610e83565b005b610256600480360381019061025191906111ab565b610f1d565b604051610263919061185a565b60405180910390f35b610274610f40565b604051610281919061191b565b60405180910390f35b6000602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900460ff16905082565b7f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921860001b81565b6000804690508091505090565b60008060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900460ff16151515158152505090506000816000015167ffffffffffffffff1611610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f9061199d565b60405180910390fd5b600081600001514261044a9190611a9a565b90506000878787878733878960200151604051602401610471989796959493929190611790565b6040516020818303038152906040527fad7b49fb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508873ffffffffffffffffffffffffffffffffffffffff1663468721a73060008460006040518563ffffffff1660e01b815260040161053194939291906116f8565b602060405180830381600087803b15801561054b57600080fd5b505af115801561055f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058391906113f4565b6105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b99061197d565b60405180910390fd5b505050505050505050565b60006105dd878787878787610f1d565b90506000600160008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815260200160008201601d9054906101000a900460ff161515151581525050905042816020015167ffffffffffffffff161115610710576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107079061195d565b60405180910390fd5b806040015115806107c1575060008060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16115b610800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f79061199d565b60405180910390fd5b6001816060019015159081151581525050806001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550604082015181600001601c6101000a81548160ff021916908315150217905550606082015181600001601d6101000a81548160ff0219169083151502179055509050508773ffffffffffffffffffffffffffffffffffffffff1663468721a7888888886040518563ffffffff1660e01b815260040161091d9493929190611744565b602060405180830381600087803b15801561093757600080fd5b505af115801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f91906113f4565b505050505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900467ffffffffffffffff169080600001601c9054906101000a900460ff169080600001601d9054906101000a900460ff16905084565b7f26b3c09c30e365f49b0eb65e39ec1e16b5ebaded063648e49599b6b8abc3ba8681565b6040518060400160405280601a81526020017f44656c61796564205472616e73616374696f6e204d6f64756c6500000000000081525081565b6000610a65338a8a8a8a8a610f1d565b90506000600160008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815260200160008201601d9054906101000a900460ff16151515158152505090508060600151158015610b6757506000816020015167ffffffffffffffff16145b610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d9061193d565b60405180910390fd5b60405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018567ffffffffffffffff1681526020018415158152602001600015158152506001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550604082015181600001601c6101000a81548160ff021916908315150217905550606082015181600001601d6101000a81548160ff0219169083151502179055509050508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdb799d52da78807d5f62c8d7f10af33364d71380f01b766f0c0c92910a2d881b84604051610d15919061185a565b60405180910390a350505050505050505050565b60405180604001604052808367ffffffffffffffff1681526020018215158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548160ff0219169083151502179055509050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd459ebb585b6b5e895cf275ed0046f1b4111b7171f4e67e0880016e3f9ba4dd48484604051610e769291906119d8565b60405180910390a3505050565b6000610e93338787878787610f1d565b905060016000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549067ffffffffffffffff021916905560008201601c6101000a81549060ff021916905560008201601d6101000a81549060ff02191690555050505050505050565b6000610f2d878787878787610f79565b8051906020012090509695505050505050565b6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b60606000610f85610303565b905060007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921860001b8230604051602001610fc1939291906118e4565b60405160208183030381529060405280519060200120905060007f26b3c09c30e365f49b0eb65e39ec1e16b5ebaded063648e49599b6b8abc3ba868a8a8a8a805190602001208a8a60405160200161101f9796959493929190611875565b604051602081830303815290604052805190602001209050601960f81b600160f81b838360405160200161105694939291906116aa565b60405160208183030381529060405293505050509695505050505050565b600061108761108284611a32565b611a01565b90508281526020810184848401111561109f57600080fd5b6110aa848285611bc5565b509392505050565b6000813590506110c181611ccd565b92915050565b6000813590506110d681611ce4565b92915050565b6000815190506110eb81611ce4565b92915050565b60008135905061110081611cfb565b92915050565b600082601f83011261111757600080fd5b8135611127848260208601611074565b91505092915050565b60008135905061113f81611d12565b92915050565b60008135905061115481611d22565b92915050565b60008135905061116981611d39565b92915050565b6000806040838503121561118257600080fd5b6000611190858286016110b2565b92505060206111a1858286016110b2565b9150509250929050565b60008060008060008060c087890312156111c457600080fd5b60006111d289828a016110b2565b96505060206111e389828a016110b2565b95505060406111f489828a01611145565b945050606087013567ffffffffffffffff81111561121157600080fd5b61121d89828a01611106565b935050608061122e89828a01611130565b92505060a061123f89828a01611145565b9150509295509295509295565b600080600080600060a0868803121561126457600080fd5b6000611272888289016110b2565b955050602061128388828901611145565b945050604086013567ffffffffffffffff8111156112a057600080fd5b6112ac88828901611106565b93505060606112bd88828901611130565b92505060806112ce88828901611145565b9150509295509295909350565b600080600080600080600080610100898b0312156112f857600080fd5b60006113068b828c016110b2565b98505060206113178b828c01611145565b975050604089013567ffffffffffffffff81111561133457600080fd5b6113408b828c01611106565b96505060606113518b828c01611130565b95505060806113628b828c01611145565b94505060a06113738b828c016110b2565b93505060c06113848b828c0161115a565b92505060e06113958b828c016110c7565b9150509295985092959890939650565b6000806000606084860312156113ba57600080fd5b60006113c8868287016110b2565b93505060206113d98682870161115a565b92505060406113ea868287016110c7565b9150509250925092565b60006020828403121561140657600080fd5b6000611414848285016110dc565b91505092915050565b60006020828403121561142f57600080fd5b600061143d848285016110f1565b91505092915050565b61144f81611ad8565b82525050565b61145e81611aea565b82525050565b61147561147082611af6565b611c07565b82525050565b61148481611b22565b82525050565b61149b61149682611b22565b611c11565b82525050565b60006114ac82611a62565b6114b68185611a78565b93506114c6818560208601611bd4565b6114cf81611ca8565b840191505092915050565b6114e381611b7d565b82525050565b6114f281611ba1565b82525050565b61150181611bb3565b82525050565b600061151282611a6d565b61151c8185611a89565b935061152c818560208601611bd4565b61153581611ca8565b840191505092915050565b600061154d602683611a89565b91507f43616e6e6f7420616e6e6f756e63652073616d65207472616e73616374696f6e60008301527f20616761696e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115b3601e83611a89565b91507f43616e6e6f742065786563757465207472616e73616374696f6e2079657400006000830152602082019050919050565b60006115f3601e83611a89565b91507f436f756c64206e6f7420616e6e6f756e6365207472616e73616374696f6e00006000830152602082019050919050565b6000611633603683611a89565b91507f436f756c64206e6f742066696e642076616c696420636f6e66696720666f722060008301527f6578656375746f7220616e6420616e6e6f756e636572000000000000000000006020830152604082019050919050565b61169581611b5f565b82525050565b6116a481611b69565b82525050565b60006116b68287611464565b6001820191506116c68286611464565b6001820191506116d6828561148a565b6020820191506116e6828461148a565b60208201915081905095945050505050565b600060808201905061170d6000830187611446565b61171a60208301866114f8565b818103604083015261172c81856114a1565b905061173b60608301846114e9565b95945050505050565b60006080820190506117596000830187611446565b611766602083018661168c565b818103604083015261177881856114a1565b905061178760608301846114e9565b95945050505050565b6000610100820190506117a6600083018b611446565b6117b3602083018a61168c565b81810360408301526117c581896114a1565b90506117d460608301886114e9565b6117e1608083018761168c565b6117ee60a0830186611446565b6117fb60c083018561169b565b61180860e0830184611455565b9998505050505050505050565b600060808201905061182a6000830187611446565b611837602083018661169b565b6118446040830185611455565b6118516060830184611455565b95945050505050565b600060208201905061186f600083018461147b565b92915050565b600060e08201905061188a600083018a61147b565b6118976020830189611446565b6118a46040830188611446565b6118b1606083018761168c565b6118be608083018661147b565b6118cb60a08301856114e9565b6118d860c083018461168c565b98975050505050505050565b60006060820190506118f9600083018661147b565b611906602083018561168c565b61191360408301846114da565b949350505050565b600060208201905081810360008301526119358184611507565b905092915050565b6000602082019050818103600083015261195681611540565b9050919050565b60006020820190508181036000830152611976816115a6565b9050919050565b60006020820190508181036000830152611996816115e6565b9050919050565b600060208201905081810360008301526119b681611626565b9050919050565b60006020820190506119d2600083018461168c565b92915050565b60006040820190506119ed600083018561169b565b6119fa6020830184611455565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715611a2857611a27611c79565b5b8060405250919050565b600067ffffffffffffffff821115611a4d57611a4c611c79565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611aa582611b69565b9150611ab083611b69565b92508267ffffffffffffffff03821115611acd57611acc611c1b565b5b828201905092915050565b6000611ae382611b3f565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6000819050611b3a82611cb9565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611b8882611b8f565b9050919050565b6000611b9a82611b3f565b9050919050565b6000611bac82611b2c565b9050919050565b6000611bbe82611b5f565b9050919050565b82818337600083830152505050565b60005b83811015611bf2578082015181840152602081019050611bd7565b83811115611c01576000848401525b50505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60028110611cca57611cc9611c4a565b5b50565b611cd681611ad8565b8114611ce157600080fd5b50565b611ced81611aea565b8114611cf857600080fd5b50565b611d0481611b22565b8114611d0f57600080fd5b50565b60028110611d1f57600080fd5b50565b611d2b81611b5f565b8114611d3657600080fd5b50565b611d4281611b69565b8114611d4d57600080fd5b5056fea264697066735822122024197070053dbebca5dc538c97200e22d03539e318192ecafc608958fbb7f3f564736f6c63430008000033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeTransaction(address,address,uint256,bytes,uint8,uint256)": {
        "details": "This method can be triggered by anyone, as transaction announcement is authorized.",
        "params": {
          "data": "Data payload of delayed transaction.",
          "executor": "Contract that will execute the delayed transaction.",
          "nonce": "None of delayed transaction.",
          "operation": "Operation type of delayed transaction.",
          "to": "Destination address of delayed transaction.",
          "value": "Ether value of delayed transaction."
        }
      },
      "getChainId()": {
        "details": "Returns the chain id used by this contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeTransaction(address,address,uint256,bytes,uint8,uint256)": {
        "notice": "Allows to trigger execution of a delayed transaction that has been announced before."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 74,
        "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
        "label": "configs",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Config)58_storage))"
      },
      {
        "astId": 79,
        "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
        "label": "announcements",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Announcement)67_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Config)58_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct DelayedTxModule.Config))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Config)58_storage)"
      },
      "t_mapping(t_address,t_struct(Config)58_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DelayedTxModule.Config)",
        "numberOfBytes": "32",
        "value": "t_struct(Config)58_storage"
      },
      "t_mapping(t_bytes32,t_struct(Announcement)67_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct DelayedTxModule.Announcement)",
        "numberOfBytes": "32",
        "value": "t_struct(Announcement)67_storage"
      },
      "t_struct(Announcement)67_storage": {
        "encoding": "inplace",
        "label": "struct DelayedTxModule.Announcement",
        "members": [
          {
            "astId": 60,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "announcer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 62,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "execTime",
            "offset": 20,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 64,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "requireAnnouncer",
            "offset": 28,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 66,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "executed",
            "offset": 29,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Config)58_storage": {
        "encoding": "inplace",
        "label": "struct DelayedTxModule.Config",
        "members": [
          {
            "astId": 55,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "delay",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 57,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "requireAnnouncer",
            "offset": 8,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}