{
  "address": "0x6c534758AD7A99196E124A74943eA64624c86745",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        }
      ],
      "name": "NewAnnouncement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "delay",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        }
      ],
      "name": "UpdatedConfig",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELAYED_TRANSACTION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "announceTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "announcements",
      "outputs": [
        {
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "execTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "execTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        }
      ],
      "name": "approveTransactionAnnouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "configs",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "delay",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "generateTransactionHashData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "getTransactionHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "revokeTransactionAnnouncement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "announcer",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "delay",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "requireAnnouncer",
          "type": "bool"
        }
      ],
      "name": "updateConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1c5586d7a5ab8f18bdc8b05ed4b9de49372075fcbfee46b87ed293abcacf23ec",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x05c85Ab5B09Eb8A55020d72daf6091E04e264af9",
    "contractAddress": null,
    "transactionIndex": 4,
    "gasUsed": "1934049",
    "logsBloom": "0x
    "blockHash": "0x42882c7e3f70b88433f0597ea7e23cd244f985afd893414c893c361df950d368",
    "transactionHash": "0x1c5586d7a5ab8f18bdc8b05ed4b9de49372075fcbfee46b87ed293abcacf23ec",
    "logs": [],
    "blockNumber": 7954028,
    "cumulativeGasUsed": "2305265",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "89632e27e67e2304ebf84d03838348dd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"NewAnnouncement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"delay\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"}],\"name\":\"UpdatedConfig\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELAYED_TRANSACTION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"announceTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"announcements\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"execTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"execTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"}],\"name\":\"approveTransactionAnnouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"configs\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"delay\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"generateTransactionHashData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"getTransactionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"revokeTransactionAnnouncement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"announcer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"delay\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"requireAnnouncer\",\"type\":\"bool\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeTransaction(address,address,uint256,bytes,uint8,uint256)\":{\"details\":\"This method can be triggered by anyone, as transaction announcement is authorized.\",\"params\":{\"data\":\"Data payload of delayed transaction.\",\"executor\":\"Contract that will execute the delayed transaction.\",\"nonce\":\"None of delayed transaction.\",\"operation\":\"Operation type of delayed transaction.\",\"to\":\"Destination address of delayed transaction.\",\"value\":\"Ether value of delayed transaction.\"}},\"generateTransactionHashData(address,address,uint256,bytes,uint8,uint256)\":{\"details\":\"Generates the data for the delayed transaction hash (required for signing)\"},\"getChainId()\":{\"details\":\"Returns the chain id used by this contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeTransaction(address,address,uint256,bytes,uint8,uint256)\":{\"notice\":\"Allows to trigger execution of a delayed transaction that has been announced before.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DelayedTxModule.sol\":\"DelayedTxModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DelayedTxModule.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\ncontract Enum {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n}\\n\\ninterface Executor {\\n    /// @dev Allows a Module to execute a transaction.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(address to, uint256 value, bytes calldata data, Enum.Operation operation)\\n        external\\n        returns (bool success);\\n}\\n\\ncontract DelayedTxModule {\\n\\n    event NewAnnouncement(address indexed executor, address indexed announcer, bytes32 txHash);\\n    event UpdatedConfig(address indexed executor, address indexed announcer, uint64 delay, bool requireAnnouncer);\\n    \\n    string public constant NAME = \\\"Delayed Transaction Module\\\";\\n    string public constant VERSION = \\\"1.0.0\\\";\\n\\n    bytes32 public constant DOMAIN_SEPARATOR_TYPEHASH = 0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218;\\n    // keccak256(\\n    //     \\\"EIP712Domain(uint256 chainId,address verifyingContract)\\\"\\n    // );\\n\\n    bytes32 public constant DELAYED_TRANSACTION_TYPEHASH = keccak256(\\n         \\\"DelayedTransaction(address executor,address to,uint256 value,bytes data,uint8 operation,uint256 nonce)\\\"\\n    );\\n\\n    struct Config {\\n        uint64 delay; // Delay in seconds before an announced transaction can be executed\\n        bool requireAnnouncer; // Flag to set if announcer should be checked again before execution\\n    }\\n    \\n    struct Announcement {\\n        address announcer; \\n        uint64 execTime; // Block time in seconds when the announced transaction can be executed\\n        bool requireAnnouncer; // Flag if to check if announcer is still present on execution\\n        bool executed; // Flag if the announced transaction was executed\\n    }\\n    \\n    // Executor -> Announcer -> Config\\n    mapping (address => mapping (address => Config)) public configs;\\n    \\n    // Transaction Hash -> Announcement\\n    mapping (bytes32 => Announcement) public announcements;\\n    \\n    function updateConfig(address announcer, uint64 delay, bool requireAnnouncer)\\n        public\\n    {\\n        // Note: msg.sender is the executor\\n        configs[msg.sender][announcer] = Config(delay, requireAnnouncer);\\n        emit UpdatedConfig(msg.sender, announcer, delay, requireAnnouncer);\\n    }\\n    \\n    function announceTransaction(address executor, address to, uint256 value, bytes memory data, Enum.Operation operation, uint256 nonce) \\n        public \\n    {\\n        // Note: msg.sender is the announcer\\n        Config memory config = configs[executor][msg.sender];\\n        require(config.delay > 0, \\\"Could not find valid config for executor and announcer\\\");\\n        // No need to check overflow because Solidity does this now (starting with 0.8.0)\\n        uint64 execTime = uint64(block.timestamp) + config.delay;\\n        bytes memory approveAnnouncement = abi.encodeWithSignature(\\n            \\\"approveTransactionAnnouncement(address,uint256,bytes,uint8,uint256,address,uint64,bool)\\\", \\n            to, \\n            value,\\n            data,\\n            operation,\\n            nonce,\\n            msg.sender,\\n            execTime,\\n            config.requireAnnouncer\\n        );\\n        // We redirect the announcement via the executor\\n        // This is a preemptive check that this modules is enabled and this also notifies the executor that a transaction was announced\\n        require(Executor(executor).execTransactionFromModule(address(this), 0, approveAnnouncement, Enum.Operation.Call), \\\"Could not announce transaction\\\");\\n    }\\n    \\n    function approveTransactionAnnouncement(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 nonce,\\n        address announcer,\\n        uint64 execTime,\\n        bool requireAnnouncer\\n    ) \\n        public \\n    {\\n        // Note: msg.sender is the executor\\n        bytes32 txHash = getTransactionHash(msg.sender, to, value, data, operation, nonce);\\n        Announcement memory announcement = announcements[txHash];\\n        require(execTime > block.timestamp, \\\"Cannot delay transaction into the present or past (only future)\\\");\\n        require(announcement.execTime == 0 && !announcement.executed, \\\"Cannot announce same transaction again\\\");\\n        announcements[txHash] = Announcement(announcer, execTime, requireAnnouncer, false);\\n        emit NewAnnouncement(msg.sender, announcer, txHash);\\n    }\\n    \\n    function revokeTransactionAnnouncement(address to, uint256 value, bytes memory data, Enum.Operation operation, uint256 nonce) \\n        public \\n    {\\n        // Note: msg.sender is the executor\\n        bytes32 txHash = getTransactionHash(msg.sender, to, value, data, operation, nonce);\\n        Announcement memory announcement = announcements[txHash];\\n        require(announcement.execTime > 0, \\\"Could not find announcement\\\");\\n        require(!announcement.executed, \\\"Cannot revoke executed transaction\\\");\\n        delete announcements[txHash];\\n    }\\n    \\n    /// @notice Allows to trigger execution of a delayed transaction that has been announced before.\\n    /// @dev This method can be triggered by anyone, as transaction announcement is authorized.\\n    /// @param executor Contract that will execute the delayed transaction.\\n    /// @param to Destination address of delayed transaction.\\n    /// @param value Ether value of delayed transaction.\\n    /// @param data Data payload of delayed transaction.\\n    /// @param operation Operation type of delayed transaction.\\n    /// @param nonce None of delayed transaction.\\n    function executeTransaction(address executor, address to, uint256 value, bytes memory data, Enum.Operation operation, uint256 nonce) \\n        public \\n    {\\n        bytes32 txHash = getTransactionHash(executor, to, value, data, operation, nonce);\\n        Announcement memory announcement = announcements[txHash];\\n        require(announcement.execTime > 0, \\\"Could not find announcement\\\");\\n        require(!announcement.executed, \\\"Cannot execute transaction again\\\");\\n        require(announcement.execTime <= block.timestamp, \\\"Cannot execute transaction yet\\\");\\n        // If the announcer is set we should check if the announcer is still enabled\\n        require(\\n            !announcement.requireAnnouncer || configs[executor][announcement.announcer].delay > 0, \\n            \\\"Could not find valid config for executor and announcer\\\"\\n        );\\n        announcement.executed = true;\\n        announcements[txHash] = announcement;\\n        // We do not require a success here, so that the hash will always be marked as executed\\n        Executor(executor).execTransactionFromModule(to, value, data, operation);\\n    }\\n    \\n    /// @dev Returns the chain id used by this contract.\\n    function getChainId() public view returns (uint256) {\\n        uint256 id;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            id := chainid()\\n        }\\n        return id;\\n    }\\n    \\n    /// @dev Generates the data for the delayed transaction hash (required for signing)\\n    function generateTransactionHashData(\\n        address executor,\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Enum.Operation operation,\\n        uint256 nonce\\n    ) \\n        public \\n        view \\n        returns (bytes memory) \\n    {\\n        uint256 chainId = getChainId();\\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, chainId, this));\\n        bytes32 transactionHash = keccak256(\\n            abi.encode(DELAYED_TRANSACTION_TYPEHASH, executor, to, value, keccak256(data), operation, nonce)\\n        );\\n        return abi.encodePacked(bytes1(0x19), bytes1(0x01), domainSeparator, transactionHash);\\n    }\\n    \\n    function getTransactionHash(address executor, address to, uint256 value, bytes memory data, Enum.Operation operation, uint256 nonce) \\n        public\\n        view\\n        returns (bytes32)\\n    {\\n        return keccak256(generateTransactionHashData(executor, to, value, data, operation, nonce));\\n    }\\n}\",\"keccak256\":\"0x9dd9e7eec34d02cebd3b05b9d5e1f1f5c1e2677a97d095ba4f182b605e2163ee\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612218806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a3f4df7e1161008c578063c2894cbe11610066578063c2894cbe1461023b578063c959c16e14610257578063f649255714610287578063ffa1ad74146102b7576100ea565b8063a3f4df7e146101e5578063ad7b49fb14610203578063be1c17961461021f576100ea565b806368d73310116100c857806368d733101461015c57806376768d68146101785780637d40d6c2146101945780638030c3a3146101c7576100ea565b80631bec1a92146100ef5780631db61b54146101205780633408e4701461013e575b600080fd5b61010960048036038101906101049190611413565b6102d5565b604051610117929190611e6a565b60405180910390f35b610128610327565b6040516101359190611c4a565b60405180910390f35b61014661034e565b6040516101539190611e4f565b60405180910390f35b6101766004803603810190610171919061144f565b61035b565b005b610192600480360381019061018d919061144f565b610618565b005b6101ae60048036038101906101a991906116c1565b610a5b565b6040516101be9493929190611c05565b60405180910390f35b6101cf610ad9565b6040516101dc9190611c4a565b60405180910390f35b6101ed610afd565b6040516101fa9190611d2d565b60405180910390f35b61021d6004803603810190610218919061157f565b610b36565b005b61023960048036038101906102349190611649565b610e56565b005b610255600480360381019061025091906114f0565b610fb0565b005b610271600480360381019061026c919061144f565b6111c1565b60405161027e9190611c4a565b60405180910390f35b6102a1600480360381019061029c919061144f565b6111e4565b6040516102ae9190611d0b565b60405180910390f35b6102bf6112df565b6040516102cc9190611d2d565b60405180910390f35b6000602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900460ff16905082565b7f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921860001b81565b6000804690508091505090565b60008060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900460ff16151515158152505090506000816000015167ffffffffffffffff1611610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90611e2f565b60405180910390fd5b60008160000151426104959190611f2c565b905060008787878787338789602001516040516024016104bc989796959493929190611b80565b6040516020818303038152906040527fad7b49fb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508873ffffffffffffffffffffffffffffffffffffffff1663468721a73060008460006040518563ffffffff1660e01b815260040161057c9493929190611ae8565b602060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190611698565b61060d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060490611dcf565b60405180910390fd5b505050505050505050565b60006106288787878787876111c1565b90506000600160008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815260200160008201601d9054906101000a900460ff16151515158152505090506000816020015167ffffffffffffffff161161075b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075290611def565b60405180910390fd5b8060600151156107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790611e0f565b60405180910390fd5b42816020015167ffffffffffffffff1611156107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e890611d8f565b60405180910390fd5b806040015115806108a2575060008060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16115b6108e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d890611e2f565b60405180910390fd5b6001816060019015159081151581525050806001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550604082015181600001601c6101000a81548160ff021916908315150217905550606082015181600001601d6101000a81548160ff0219169083151502179055509050508773ffffffffffffffffffffffffffffffffffffffff1663468721a7888888886040518563ffffffff1660e01b81526004016109fe9493929190611b34565b602060405180830381600087803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a509190611698565b505050505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900467ffffffffffffffff169080600001601c9054906101000a900460ff169080600001601d9054906101000a900460ff16905084565b7f26b3c09c30e365f49b0eb65e39ec1e16b5ebaded063648e49599b6b8abc3ba8681565b6040518060400160405280601a81526020017f44656c61796564205472616e73616374696f6e204d6f64756c6500000000000081525081565b6000610b46338a8a8a8a8a6111c1565b90506000600160008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815260200160008201601d9054906101000a900460ff1615151515815250509050428467ffffffffffffffff1611610c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6b90611daf565b60405180910390fd5b6000816020015167ffffffffffffffff16148015610c9457508060600151155b610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca90611d4f565b60405180910390fd5b60405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018567ffffffffffffffff1681526020018415158152602001600015158152506001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550604082015181600001601c6101000a81548160ff021916908315150217905550606082015181600001601d6101000a81548160ff0219169083151502179055509050508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdb799d52da78807d5f62c8d7f10af33364d71380f01b766f0c0c92910a2d881b84604051610e429190611c4a565b60405180910390a350505050505050505050565b60405180604001604052808367ffffffffffffffff1681526020018215158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548160ff0219169083151502179055509050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd459ebb585b6b5e895cf275ed0046f1b4111b7171f4e67e0880016e3f9ba4dd48484604051610fa3929190611e6a565b60405180910390a3505050565b6000610fc03387878787876111c1565b90506000600160008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815260200160008201601d9054906101000a900460ff16151515158152505090506000816020015167ffffffffffffffff16116110f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ea90611def565b60405180910390fd5b806060015115611138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112f90611d6f565b60405180910390fd5b60016000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549067ffffffffffffffff021916905560008201601c6101000a81549060ff021916905560008201601d6101000a81549060ff0219169055505050505050505050565b60006111d18787878787876111e4565b8051906020012090509695505050505050565b606060006111f061034e565b905060007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921860001b823060405160200161122c93929190611cd4565b60405160208183030381529060405280519060200120905060007f26b3c09c30e365f49b0eb65e39ec1e16b5ebaded063648e49599b6b8abc3ba868a8a8a8a805190602001208a8a60405160200161128a9796959493929190611c65565b604051602081830303815290604052805190602001209050601960f81b600160f81b83836040516020016112c19493929190611a9a565b60405160208183030381529060405293505050509695505050505050565b6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b600061132b61132684611ec4565b611e93565b90508281526020810184848401111561134357600080fd5b61134e848285612057565b509392505050565b6000813590506113658161215f565b92915050565b60008135905061137a81612176565b92915050565b60008151905061138f81612176565b92915050565b6000813590506113a48161218d565b92915050565b600082601f8301126113bb57600080fd5b81356113cb848260208601611318565b91505092915050565b6000813590506113e3816121a4565b92915050565b6000813590506113f8816121b4565b92915050565b60008135905061140d816121cb565b92915050565b6000806040838503121561142657600080fd5b600061143485828601611356565b925050602061144585828601611356565b9150509250929050565b60008060008060008060c0878903121561146857600080fd5b600061147689828a01611356565b965050602061148789828a01611356565b955050604061149889828a016113e9565b945050606087013567ffffffffffffffff8111156114b557600080fd5b6114c189828a016113aa565b93505060806114d289828a016113d4565b92505060a06114e389828a016113e9565b9150509295509295509295565b600080600080600060a0868803121561150857600080fd5b600061151688828901611356565b9550506020611527888289016113e9565b945050604086013567ffffffffffffffff81111561154457600080fd5b611550888289016113aa565b9350506060611561888289016113d4565b9250506080611572888289016113e9565b9150509295509295909350565b600080600080600080600080610100898b03121561159c57600080fd5b60006115aa8b828c01611356565b98505060206115bb8b828c016113e9565b975050604089013567ffffffffffffffff8111156115d857600080fd5b6115e48b828c016113aa565b96505060606115f58b828c016113d4565b95505060806116068b828c016113e9565b94505060a06116178b828c01611356565b93505060c06116288b828c016113fe565b92505060e06116398b828c0161136b565b9150509295985092959890939650565b60008060006060848603121561165e57600080fd5b600061166c86828701611356565b935050602061167d868287016113fe565b925050604061168e8682870161136b565b9150509250925092565b6000602082840312156116aa57600080fd5b60006116b884828501611380565b91505092915050565b6000602082840312156116d357600080fd5b60006116e184828501611395565b91505092915050565b6116f381611f6a565b82525050565b61170281611f7c565b82525050565b61171961171482611f88565b612099565b82525050565b61172881611fb4565b82525050565b61173f61173a82611fb4565b6120a3565b82525050565b600061175082611ef4565b61175a8185611f0a565b935061176a818560208601612066565b6117738161213a565b840191505092915050565b6117878161200f565b82525050565b61179681612033565b82525050565b6117a581612045565b82525050565b60006117b682611eff565b6117c08185611f1b565b93506117d0818560208601612066565b6117d98161213a565b840191505092915050565b60006117f1602683611f1b565b91507f43616e6e6f7420616e6e6f756e63652073616d65207472616e73616374696f6e60008301527f20616761696e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611857602283611f1b565b91507f43616e6e6f74207265766f6b65206578656375746564207472616e736163746960008301527f6f6e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118bd601e83611f1b565b91507f43616e6e6f742065786563757465207472616e73616374696f6e2079657400006000830152602082019050919050565b60006118fd603f83611f1b565b91507f43616e6e6f742064656c6179207472616e73616374696f6e20696e746f20746860008301527f652070726573656e74206f72207061737420286f6e6c792066757475726529006020830152604082019050919050565b6000611963601e83611f1b565b91507f436f756c64206e6f7420616e6e6f756e6365207472616e73616374696f6e00006000830152602082019050919050565b60006119a3601b83611f1b565b91507f436f756c64206e6f742066696e6420616e6e6f756e63656d656e7400000000006000830152602082019050919050565b60006119e3602083611f1b565b91507f43616e6e6f742065786563757465207472616e73616374696f6e20616761696e6000830152602082019050919050565b6000611a23603683611f1b565b91507f436f756c64206e6f742066696e642076616c696420636f6e66696720666f722060008301527f6578656375746f7220616e6420616e6e6f756e636572000000000000000000006020830152604082019050919050565b611a8581611ff1565b82525050565b611a9481611ffb565b82525050565b6000611aa68287611708565b600182019150611ab68286611708565b600182019150611ac6828561172e565b602082019150611ad6828461172e565b60208201915081905095945050505050565b6000608082019050611afd60008301876116ea565b611b0a602083018661179c565b8181036040830152611b1c8185611745565b9050611b2b606083018461178d565b95945050505050565b6000608082019050611b4960008301876116ea565b611b566020830186611a7c565b8181036040830152611b688185611745565b9050611b77606083018461178d565b95945050505050565b600061010082019050611b96600083018b6116ea565b611ba3602083018a611a7c565b8181036040830152611bb58189611745565b9050611bc4606083018861178d565b611bd16080830187611a7c565b611bde60a08301866116ea565b611beb60c0830185611a8b565b611bf860e08301846116f9565b9998505050505050505050565b6000608082019050611c1a60008301876116ea565b611c276020830186611a8b565b611c3460408301856116f9565b611c4160608301846116f9565b95945050505050565b6000602082019050611c5f600083018461171f565b92915050565b600060e082019050611c7a600083018a61171f565b611c8760208301896116ea565b611c9460408301886116ea565b611ca16060830187611a7c565b611cae608083018661171f565b611cbb60a083018561178d565b611cc860c0830184611a7c565b98975050505050505050565b6000606082019050611ce9600083018661171f565b611cf66020830185611a7c565b611d03604083018461177e565b949350505050565b60006020820190508181036000830152611d258184611745565b905092915050565b60006020820190508181036000830152611d4781846117ab565b905092915050565b60006020820190508181036000830152611d68816117e4565b9050919050565b60006020820190508181036000830152611d888161184a565b9050919050565b60006020820190508181036000830152611da8816118b0565b9050919050565b60006020820190508181036000830152611dc8816118f0565b9050919050565b60006020820190508181036000830152611de881611956565b9050919050565b60006020820190508181036000830152611e0881611996565b9050919050565b60006020820190508181036000830152611e28816119d6565b9050919050565b60006020820190508181036000830152611e4881611a16565b9050919050565b6000602082019050611e646000830184611a7c565b92915050565b6000604082019050611e7f6000830185611a8b565b611e8c60208301846116f9565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715611eba57611eb961210b565b5b8060405250919050565b600067ffffffffffffffff821115611edf57611ede61210b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f3782611ffb565b9150611f4283611ffb565b92508267ffffffffffffffff03821115611f5f57611f5e6120ad565b5b828201905092915050565b6000611f7582611fd1565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6000819050611fcc8261214b565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061201a82612021565b9050919050565b600061202c82611fd1565b9050919050565b600061203e82611fbe565b9050919050565b600061205082611ff1565b9050919050565b82818337600083830152505050565b60005b83811015612084578082015181840152602081019050612069565b83811115612093576000848401525b50505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6002811061215c5761215b6120dc565b5b50565b61216881611f6a565b811461217357600080fd5b50565b61217f81611f7c565b811461218a57600080fd5b50565b61219681611fb4565b81146121a157600080fd5b50565b600281106121b157600080fd5b50565b6121bd81611ff1565b81146121c857600080fd5b50565b6121d481611ffb565b81146121df57600080fd5b5056fea2646970667358221220841456dcfbeab3d6da08588f3083cf5e9fa42c59fddf2a5ebdfefb638981d12164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a3f4df7e1161008c578063c2894cbe11610066578063c2894cbe1461023b578063c959c16e14610257578063f649255714610287578063ffa1ad74146102b7576100ea565b8063a3f4df7e146101e5578063ad7b49fb14610203578063be1c17961461021f576100ea565b806368d73310116100c857806368d733101461015c57806376768d68146101785780637d40d6c2146101945780638030c3a3146101c7576100ea565b80631bec1a92146100ef5780631db61b54146101205780633408e4701461013e575b600080fd5b61010960048036038101906101049190611413565b6102d5565b604051610117929190611e6a565b60405180910390f35b610128610327565b6040516101359190611c4a565b60405180910390f35b61014661034e565b6040516101539190611e4f565b60405180910390f35b6101766004803603810190610171919061144f565b61035b565b005b610192600480360381019061018d919061144f565b610618565b005b6101ae60048036038101906101a991906116c1565b610a5b565b6040516101be9493929190611c05565b60405180910390f35b6101cf610ad9565b6040516101dc9190611c4a565b60405180910390f35b6101ed610afd565b6040516101fa9190611d2d565b60405180910390f35b61021d6004803603810190610218919061157f565b610b36565b005b61023960048036038101906102349190611649565b610e56565b005b610255600480360381019061025091906114f0565b610fb0565b005b610271600480360381019061026c919061144f565b6111c1565b60405161027e9190611c4a565b60405180910390f35b6102a1600480360381019061029c919061144f565b6111e4565b6040516102ae9190611d0b565b60405180910390f35b6102bf6112df565b6040516102cc9190611d2d565b60405180910390f35b6000602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900460ff16905082565b7f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921860001b81565b6000804690508091505090565b60008060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900460ff16151515158152505090506000816000015167ffffffffffffffff1611610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90611e2f565b60405180910390fd5b60008160000151426104959190611f2c565b905060008787878787338789602001516040516024016104bc989796959493929190611b80565b6040516020818303038152906040527fad7b49fb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508873ffffffffffffffffffffffffffffffffffffffff1663468721a73060008460006040518563ffffffff1660e01b815260040161057c9493929190611ae8565b602060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190611698565b61060d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060490611dcf565b60405180910390fd5b505050505050505050565b60006106288787878787876111c1565b90506000600160008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815260200160008201601d9054906101000a900460ff16151515158152505090506000816020015167ffffffffffffffff161161075b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075290611def565b60405180910390fd5b8060600151156107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790611e0f565b60405180910390fd5b42816020015167ffffffffffffffff1611156107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e890611d8f565b60405180910390fd5b806040015115806108a2575060008060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16115b6108e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d890611e2f565b60405180910390fd5b6001816060019015159081151581525050806001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550604082015181600001601c6101000a81548160ff021916908315150217905550606082015181600001601d6101000a81548160ff0219169083151502179055509050508773ffffffffffffffffffffffffffffffffffffffff1663468721a7888888886040518563ffffffff1660e01b81526004016109fe9493929190611b34565b602060405180830381600087803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a509190611698565b505050505050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900467ffffffffffffffff169080600001601c9054906101000a900460ff169080600001601d9054906101000a900460ff16905084565b7f26b3c09c30e365f49b0eb65e39ec1e16b5ebaded063648e49599b6b8abc3ba8681565b6040518060400160405280601a81526020017f44656c61796564205472616e73616374696f6e204d6f64756c6500000000000081525081565b6000610b46338a8a8a8a8a6111c1565b90506000600160008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815260200160008201601d9054906101000a900460ff1615151515815250509050428467ffffffffffffffff1611610c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6b90611daf565b60405180910390fd5b6000816020015167ffffffffffffffff16148015610c9457508060600151155b610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca90611d4f565b60405180910390fd5b60405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018567ffffffffffffffff1681526020018415158152602001600015158152506001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550604082015181600001601c6101000a81548160ff021916908315150217905550606082015181600001601d6101000a81548160ff0219169083151502179055509050508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdb799d52da78807d5f62c8d7f10af33364d71380f01b766f0c0c92910a2d881b84604051610e429190611c4a565b60405180910390a350505050505050505050565b60405180604001604052808367ffffffffffffffff1681526020018215158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548160ff0219169083151502179055509050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd459ebb585b6b5e895cf275ed0046f1b4111b7171f4e67e0880016e3f9ba4dd48484604051610fa3929190611e6a565b60405180910390a3505050565b6000610fc03387878787876111c1565b90506000600160008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815260200160008201601d9054906101000a900460ff16151515158152505090506000816020015167ffffffffffffffff16116110f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ea90611def565b60405180910390fd5b806060015115611138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112f90611d6f565b60405180910390fd5b60016000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549067ffffffffffffffff021916905560008201601c6101000a81549060ff021916905560008201601d6101000a81549060ff0219169055505050505050505050565b60006111d18787878787876111e4565b8051906020012090509695505050505050565b606060006111f061034e565b905060007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921860001b823060405160200161122c93929190611cd4565b60405160208183030381529060405280519060200120905060007f26b3c09c30e365f49b0eb65e39ec1e16b5ebaded063648e49599b6b8abc3ba868a8a8a8a805190602001208a8a60405160200161128a9796959493929190611c65565b604051602081830303815290604052805190602001209050601960f81b600160f81b83836040516020016112c19493929190611a9a565b60405160208183030381529060405293505050509695505050505050565b6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b600061132b61132684611ec4565b611e93565b90508281526020810184848401111561134357600080fd5b61134e848285612057565b509392505050565b6000813590506113658161215f565b92915050565b60008135905061137a81612176565b92915050565b60008151905061138f81612176565b92915050565b6000813590506113a48161218d565b92915050565b600082601f8301126113bb57600080fd5b81356113cb848260208601611318565b91505092915050565b6000813590506113e3816121a4565b92915050565b6000813590506113f8816121b4565b92915050565b60008135905061140d816121cb565b92915050565b6000806040838503121561142657600080fd5b600061143485828601611356565b925050602061144585828601611356565b9150509250929050565b60008060008060008060c0878903121561146857600080fd5b600061147689828a01611356565b965050602061148789828a01611356565b955050604061149889828a016113e9565b945050606087013567ffffffffffffffff8111156114b557600080fd5b6114c189828a016113aa565b93505060806114d289828a016113d4565b92505060a06114e389828a016113e9565b9150509295509295509295565b600080600080600060a0868803121561150857600080fd5b600061151688828901611356565b9550506020611527888289016113e9565b945050604086013567ffffffffffffffff81111561154457600080fd5b611550888289016113aa565b9350506060611561888289016113d4565b9250506080611572888289016113e9565b9150509295509295909350565b600080600080600080600080610100898b03121561159c57600080fd5b60006115aa8b828c01611356565b98505060206115bb8b828c016113e9565b975050604089013567ffffffffffffffff8111156115d857600080fd5b6115e48b828c016113aa565b96505060606115f58b828c016113d4565b95505060806116068b828c016113e9565b94505060a06116178b828c01611356565b93505060c06116288b828c016113fe565b92505060e06116398b828c0161136b565b9150509295985092959890939650565b60008060006060848603121561165e57600080fd5b600061166c86828701611356565b935050602061167d868287016113fe565b925050604061168e8682870161136b565b9150509250925092565b6000602082840312156116aa57600080fd5b60006116b884828501611380565b91505092915050565b6000602082840312156116d357600080fd5b60006116e184828501611395565b91505092915050565b6116f381611f6a565b82525050565b61170281611f7c565b82525050565b61171961171482611f88565b612099565b82525050565b61172881611fb4565b82525050565b61173f61173a82611fb4565b6120a3565b82525050565b600061175082611ef4565b61175a8185611f0a565b935061176a818560208601612066565b6117738161213a565b840191505092915050565b6117878161200f565b82525050565b61179681612033565b82525050565b6117a581612045565b82525050565b60006117b682611eff565b6117c08185611f1b565b93506117d0818560208601612066565b6117d98161213a565b840191505092915050565b60006117f1602683611f1b565b91507f43616e6e6f7420616e6e6f756e63652073616d65207472616e73616374696f6e60008301527f20616761696e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611857602283611f1b565b91507f43616e6e6f74207265766f6b65206578656375746564207472616e736163746960008301527f6f6e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118bd601e83611f1b565b91507f43616e6e6f742065786563757465207472616e73616374696f6e2079657400006000830152602082019050919050565b60006118fd603f83611f1b565b91507f43616e6e6f742064656c6179207472616e73616374696f6e20696e746f20746860008301527f652070726573656e74206f72207061737420286f6e6c792066757475726529006020830152604082019050919050565b6000611963601e83611f1b565b91507f436f756c64206e6f7420616e6e6f756e6365207472616e73616374696f6e00006000830152602082019050919050565b60006119a3601b83611f1b565b91507f436f756c64206e6f742066696e6420616e6e6f756e63656d656e7400000000006000830152602082019050919050565b60006119e3602083611f1b565b91507f43616e6e6f742065786563757465207472616e73616374696f6e20616761696e6000830152602082019050919050565b6000611a23603683611f1b565b91507f436f756c64206e6f742066696e642076616c696420636f6e66696720666f722060008301527f6578656375746f7220616e6420616e6e6f756e636572000000000000000000006020830152604082019050919050565b611a8581611ff1565b82525050565b611a9481611ffb565b82525050565b6000611aa68287611708565b600182019150611ab68286611708565b600182019150611ac6828561172e565b602082019150611ad6828461172e565b60208201915081905095945050505050565b6000608082019050611afd60008301876116ea565b611b0a602083018661179c565b8181036040830152611b1c8185611745565b9050611b2b606083018461178d565b95945050505050565b6000608082019050611b4960008301876116ea565b611b566020830186611a7c565b8181036040830152611b688185611745565b9050611b77606083018461178d565b95945050505050565b600061010082019050611b96600083018b6116ea565b611ba3602083018a611a7c565b8181036040830152611bb58189611745565b9050611bc4606083018861178d565b611bd16080830187611a7c565b611bde60a08301866116ea565b611beb60c0830185611a8b565b611bf860e08301846116f9565b9998505050505050505050565b6000608082019050611c1a60008301876116ea565b611c276020830186611a8b565b611c3460408301856116f9565b611c4160608301846116f9565b95945050505050565b6000602082019050611c5f600083018461171f565b92915050565b600060e082019050611c7a600083018a61171f565b611c8760208301896116ea565b611c9460408301886116ea565b611ca16060830187611a7c565b611cae608083018661171f565b611cbb60a083018561178d565b611cc860c0830184611a7c565b98975050505050505050565b6000606082019050611ce9600083018661171f565b611cf66020830185611a7c565b611d03604083018461177e565b949350505050565b60006020820190508181036000830152611d258184611745565b905092915050565b60006020820190508181036000830152611d4781846117ab565b905092915050565b60006020820190508181036000830152611d68816117e4565b9050919050565b60006020820190508181036000830152611d888161184a565b9050919050565b60006020820190508181036000830152611da8816118b0565b9050919050565b60006020820190508181036000830152611dc8816118f0565b9050919050565b60006020820190508181036000830152611de881611956565b9050919050565b60006020820190508181036000830152611e0881611996565b9050919050565b60006020820190508181036000830152611e28816119d6565b9050919050565b60006020820190508181036000830152611e4881611a16565b9050919050565b6000602082019050611e646000830184611a7c565b92915050565b6000604082019050611e7f6000830185611a8b565b611e8c60208301846116f9565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715611eba57611eb961210b565b5b8060405250919050565b600067ffffffffffffffff821115611edf57611ede61210b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f3782611ffb565b9150611f4283611ffb565b92508267ffffffffffffffff03821115611f5f57611f5e6120ad565b5b828201905092915050565b6000611f7582611fd1565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6000819050611fcc8261214b565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061201a82612021565b9050919050565b600061202c82611fd1565b9050919050565b600061203e82611fbe565b9050919050565b600061205082611ff1565b9050919050565b82818337600083830152505050565b60005b83811015612084578082015181840152602081019050612069565b83811115612093576000848401525b50505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6002811061215c5761215b6120dc565b5b50565b61216881611f6a565b811461217357600080fd5b50565b61217f81611f7c565b811461218a57600080fd5b50565b61219681611fb4565b81146121a157600080fd5b50565b600281106121b157600080fd5b50565b6121bd81611ff1565b81146121c857600080fd5b50565b6121d481611ffb565b81146121df57600080fd5b5056fea2646970667358221220841456dcfbeab3d6da08588f3083cf5e9fa42c59fddf2a5ebdfefb638981d12164736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeTransaction(address,address,uint256,bytes,uint8,uint256)": {
        "details": "This method can be triggered by anyone, as transaction announcement is authorized.",
        "params": {
          "data": "Data payload of delayed transaction.",
          "executor": "Contract that will execute the delayed transaction.",
          "nonce": "None of delayed transaction.",
          "operation": "Operation type of delayed transaction.",
          "to": "Destination address of delayed transaction.",
          "value": "Ether value of delayed transaction."
        }
      },
      "generateTransactionHashData(address,address,uint256,bytes,uint8,uint256)": {
        "details": "Generates the data for the delayed transaction hash (required for signing)"
      },
      "getChainId()": {
        "details": "Returns the chain id used by this contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeTransaction(address,address,uint256,bytes,uint8,uint256)": {
        "notice": "Allows to trigger execution of a delayed transaction that has been announced before."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 74,
        "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
        "label": "configs",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Config)58_storage))"
      },
      {
        "astId": 79,
        "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
        "label": "announcements",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Announcement)67_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(Config)58_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct DelayedTxModule.Config))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Config)58_storage)"
      },
      "t_mapping(t_address,t_struct(Config)58_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DelayedTxModule.Config)",
        "numberOfBytes": "32",
        "value": "t_struct(Config)58_storage"
      },
      "t_mapping(t_bytes32,t_struct(Announcement)67_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct DelayedTxModule.Announcement)",
        "numberOfBytes": "32",
        "value": "t_struct(Announcement)67_storage"
      },
      "t_struct(Announcement)67_storage": {
        "encoding": "inplace",
        "label": "struct DelayedTxModule.Announcement",
        "members": [
          {
            "astId": 60,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "announcer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 62,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "execTime",
            "offset": 20,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 64,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "requireAnnouncer",
            "offset": 28,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 66,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "executed",
            "offset": 29,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Config)58_storage": {
        "encoding": "inplace",
        "label": "struct DelayedTxModule.Config",
        "members": [
          {
            "astId": 55,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "delay",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 57,
            "contract": "contracts/DelayedTxModule.sol:DelayedTxModule",
            "label": "requireAnnouncer",
            "offset": 8,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}